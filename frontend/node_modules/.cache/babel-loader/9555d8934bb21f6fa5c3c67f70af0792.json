{"ast":null,"code":"var _jsxFileName = \"/Users/ElizabethReese/Desktop/Retentum/final-project/frontend/src/Components/Notes.jsx\";\nimport React from 'react';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: ''\n    };\n    this.notesHandleChange = this.notesHandleChange.bind(this);\n    this.notesHandleSubmit = this.notesHandleSubmit.bind(this);\n  }\n\n  notesHandleChange(event, key) {\n    this.setState({\n      [key]: event.target.value\n    });\n  }\n\n  notesHandleSubmit(event) {\n    event.preventDefault();\n    console.log('user has sent a note');\n    fetch('/notes', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json'\n      },\n      body: JSON.stringify({\n        notes: this.state.notes\n      })\n    }).then(function (response) {\n      return;\n    }).then(function (body) {\n      console.log(body);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.notesHandleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"notes\",\n      type: \"text\",\n      value: this.state.notes,\n      onChange: event => this.notesHandleChange(event, 'notes'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Save Notes\"));\n  }\n\n}\n\n;\nexport default Notes;","map":{"version":3,"sources":["/Users/ElizabethReese/Desktop/Retentum/final-project/frontend/src/Components/Notes.jsx"],"names":["React","Notes","Component","constructor","props","state","notes","notesHandleChange","bind","notesHandleSubmit","event","key","setState","target","value","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","response","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAOA,KAAP;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,KAAK,EAAE;AADC,KAAZ;AAGJ,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,CAACG,KAAD,EAAQC,GAAR,EAAa;AAC1B,SAAKC,QAAL,CAAc;AAAC,OAACD,GAAD,GAAOD,KAAK,CAACG,MAAN,CAAaC;AAArB,KAAd;AACH;;AAEDL,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrBA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEAC,IAAAA,KAAK,CAAC,QAAD,EAAW;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjB,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AADD,OAAf;AALU,KAAX,CAAL,CASFkB,IATE,CASG,UAASC,QAAT,EAAmB;AACtB;AAEH,KAZG,EAYDD,IAZC,CAYI,UAASH,IAAT,EAAe;AAEnBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACH,KAfG;AAgBH;;AAEDK,EAAAA,MAAM,GAAI;AACN,WACJ;AAAM,MAAA,QAAQ,EAAE,KAAKjB,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,MAAzB;AAAgC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAAlD;AACP,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKH,iBAAL,CAAuBG,KAAvB,EAA8B,OAA9B,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,OADJ,EAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHD,CADI;AAOH;;AA5CmC;;AA6CnC;AAED,eAAeT,KAAf","sourcesContent":["import React from 'react';\n\nclass Notes extends React.Component {\n    constructor(props) {\n        super (props);\n        this.state= {\n            notes: '',\n        }\n    this.notesHandleChange = this.notesHandleChange.bind(this);\n    this.notesHandleSubmit = this.notesHandleSubmit.bind(this);\n}\n\nnotesHandleChange(event, key) {\n    this.setState({[key]: event.target.value});\n};\n\nnotesHandleSubmit(event) {\n    event.preventDefault();\n    console.log('user has sent a note');\n    \n    fetch('/notes', {\n    method: 'POST', \n    headers: {\n        \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify({\n        notes: this.state.notes,\n    })\n })\n .then(function(response) {\n    return \n\n}).then(function(body) {\n\n    console.log(body);\n})\n};\n\nrender () {\n    return(\n<form onSubmit={this.notesHandleSubmit}>\n    <label><input name=\"notes\" type=\"text\" value={this.state.notes}\n    onChange={event => this.notesHandleChange(event, 'notes')}/>  </label>\n <button type=\"submit\">Save Notes</button>\n</form>\n    )\n}\n};\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}